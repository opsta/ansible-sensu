---
sensu_search_config_path: "{{ playbook_dir }}/files/groups/{{ item }}/sensu"
sensu_search_config_paths: []

sensu_host_config_file_path: "{{ sensu_host_config_path | default(inventory_hostname) }}/config.json.j2"
sensu_host_config_ssl_path: "{{ sensu_host_config_path | default(inventory_hostname) }}/ssl"
sensu_config_base_path: /etc/sensu
sensu_config_path: "{{ sensu_config_base_path }}/conf.d"
sensu_config_file_path: "{{ sensu_config_base_path }}/config.json"

sensu_apt_package: "sensu"
sensu_apt_key_url: "https://sensu.global.ssl.fastly.net/apt/pubkey.gpg"
sensu_deb_url: "deb https://sensu.global.ssl.fastly.net/apt {{ ansible_distribution_release }} main"

sensu_server_service_name: "sensu-server"
sensu_api_service_name: "sensu-api"
sensu_client_service_name: "sensu-client"

sensu_yum_package: "sensu"
sensu_rpm_key_url: "https://repositories.sensuapp.org/yum/pubkey.gpg"
sensu_rpm_url: "https://sensu.global.ssl.fastly.net/yum/$releasever/$basearch/"

# Install Sensu and dependencies of Sensu (RabbitMQ, Redis)
# NOTE: sensu_all_in_one use only in a playbook.
sensu_all_in_one: false

# Some cases, you have to install some packages for your sensu-plugins
# If you use sensu_apt_dependencies please keep following packages on
# sensu_apt_dependencies variable
sensu_apt_dependencies:
  - apt-transport-https
  - build-essential
sensu_yum_dependencies:
  - "@Development Tools"

# Sensu installation mode 
# You cand choose you installtion on this ansible roles
# - all: You need to define sensu_api, sensu_redis, sensu_rabbitmq, and
# sensu_client
# - server: You need to define sensu_api, sensu_redis, and sensu_rabbitmq
# - client: You need to sensu_rabittmq and sensu_client

# RabbitMQ configuration for Sensu
# To enable SSL for RabbitMQ
# sensu_rabbitmq:
#   host: localhost
#   port: 5672
#   vhost: /sensu
#   username: rabbitmq
#   password: CHANGEME
#   ssl: true
#   cert_file: "{{ sensu_config_base_path }}/ssl/cert.pem"
#   keyfile: "{{ sensu_config_base_path }}/ssl/key.pem"
#
# Or you can disable SSL
# sensu_rabbitmq:
#   host: localhost
#   port: 5672
#   vhost: /sensu
#   username: rabbitmq
#   password: CHANGEME
#   ssl: false
sensu_rabbitmq: {}

# You need to configure redis for save state of sensu
# sensu_redis:
#   host: localhost
#   port: 6379
#   password: CHANGEME
#   sentinels: []
#   master_name: ""
sensu_redis: {}

# You need to set Sensu-API based on installation mode
# If your need to set password on Sensu-API
# sensu_api:
#   host: localhost
#   port: 4567
#   user: sensu
#   password: CHANGEME
# 
# When you don't need authentication on Sensu-API
# sensu_api:
#   host: localhost
#   port: 4567
sensu_api: {}

# You need to configure sensu_client for run client service
# sensu_client:
#   name: sensu-client
#   address: localhost
#   subcriptions:
#     - general
#   keepalive_handers: []
#   keepalive_thresholds:
#     warning: 70
#     critical: 90
#   safe_mode: false
sensu_client: {}

# Handlers will be worked when activity is activated.
# sensu_handlers:
#   default:
#     type: set
#     handlers:
#       - stdout
#   slack:
#     type: pipe
#     command: handler-slack.rb
#     severities:
#       - critical
#       - warning
#       - ok
#     filters:
#       - state_change_only
#       - filter_interval_60_hourly
sensu_handlers: {}

# Sensu handler plugins setting
# sensu_handler_plugins:
#   slack:
#     webhook_url: https://hooks.slack.com/services/sample
#     dashboard: "http://uchiwa.example.com/#/client/$datacenter/"
#     channel: "#general"
#     icon_url: https://raw.githubusercontent.com/sensu/sensu-logo/master/sensu1_flat%20white%20bg_png.png
#     icon_emoji: ":snowman:"
#
# You can put more than one plugin.
# sensu_handler_plugins:
#   plugin1:
#     key1: value1
#     key2: value2
#   plugin2:
#     key1: value1
#     key2: value2
sensu_handler_plugins: {}

# Filters is used for filter event on Sensu
# Need to filter state is changed
# sensu_filters:
#   state_change_only:
#     negate: false
#     attributes:
#       occurrences: "eval: value == 1 || ':::action:::' == 'resolve'"
#
# Or handle repeated event
# sensu_filters:
#   filter_interval_60_hourly:
#     negate: true
#     attributes:
#       check:
#         interval: 60
#     occurrences: "eval: value != 1 && value % 60 != 0" 
#
# Or two of them.
# sensu_filters:
#   filter_interval_60_hourly:
#     negate: true
#     attributes:
#       check:
#         interval: 60
#     occurrences: "eval: value != 1 && value % 60 != 0" 
#   state_change_only:
#     negate: false
#     attributes:
#       occurrences: "eval: value == 1 || ':::action:::' == 'resolve'"
sensu_filters: {}

# You can create the checks on this playbook
# sensu_checks:
#   check_google:
#     handlers: 
#       - default
#       - slack
#     command: "/usr/local/bin/check-http.rb -u https://www.google.com 2> /dev/null"
#     interval: 5
#     timeout: 30
#     ttl: 120
#     occurrences: 3
#     refresh: 300
#     subscribers:
#       - general
#     environment: ":::environment|production:::"
#     notification: "HTTP Check - www.google.com"
# 
# You can add more than one checks.
# sensu_checks:
#   check_google:
#     handlers: 
#       - slack
#     command: "/usr/local/bin/check-http.rb -u https://www.google.com 2> /dev/null"
#     interval: 5
#     timeout: 30
#     subscribers:
#       - general
#   check_reddit:
#     handlers: 
#       - slack
#     command: "/usr/local/bin/check-http.rb -u https://www.reddit.com 2> /dev/null"
#     interval: 5
#     timeout: 30
#     subscribers:
#       - general
sensu_checks: {}

# You can download plugin for your checks.
# See more plugins : https://github.com/sensu-plugins
sensu_plugins:
  - sensu-plugins-http
  - sensu-plugins-slack
